{
    "buildScript": "/data/landun/workspace/.temp/codecc_coverity_b-d302dee9999848b28f954306a468c2af/CODECC_698F8F928C852980_eslint/b-d302dee9999848b28f954306a468c2af.sh",
    "incrementalFiles": [],
    "openCheckers":  [{
		"checkerName": "EmptyForBlock",
		"nativeChecker": true
	}, {
		"checkerName": "FunctionParameterNaming",
		"nativeChecker": true
	}, {
		"checkerName": "PackageNaming",
		"nativeChecker": true
	}, {
		"checkerName": "OptionalAbstractKeyword",
		"nativeChecker": true
	}, {
		"checkerName": "ClassNaming",
		"nativeChecker": true
	}, {
		"checkerName": "LongParameterList",
		"nativeChecker": true
	}, {
		"checkerName": "NestedBlockDepth",
		"nativeChecker": true
	}, {
		"checkerName": "FunctionNaming",
		"nativeChecker": true
	}, {
		"checkerName": "MagicNumber",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyElseBlock",
		"nativeChecker": true
	}, {
		"checkerName": "EnumNaming",
		"nativeChecker": true
	}, {
		"checkerName": "SpreadOperator",
		"nativeChecker": true
	}, {
		"checkerName": "DuplicateCaseInWhenExpression",
		"nativeChecker": true
	}, {
		"checkerName": "ModifierOrder",
		"nativeChecker": true
	}, {
		"checkerName": "TooGenericExceptionThrown",
		"nativeChecker": true
	}, {
		"checkerName": "WildcardImport",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyDefaultConstructor",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyDoWhileBlock",
		"nativeChecker": true
	}, {
		"checkerName": "MaxLineLength",
		"nativeChecker": true
	}, {
		"checkerName": "ObjectPropertyNaming",
		"nativeChecker": true
	}, {
		"checkerName": "ReturnCount",
		"nativeChecker": true
	}, {
		"checkerName": "EqualsWithHashCodeExist",
		"nativeChecker": true
	}, {
		"checkerOptions": [{
			"checkerOptionValue": "2",
			"checkerOptionName": "max"
		}],
		"checkerName": "ThrowsCount",
		"nativeChecker": true
	}, {
		"checkerName": "ForbiddenComment",
		"nativeChecker": true
	}, {
		"checkerName": "UnnecessaryTemporaryInstantiation",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyWhileBlock",
		"nativeChecker": true
	}, {
		"checkerName": "TooManyFunctions",
		"nativeChecker": true
	}, {
		"checkerName": "ForEachOnRange",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyKtFile",
		"nativeChecker": true
	}, {
		"checkerName": "ComplexCondition",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyCatchBlock",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyFunctionBlock",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyIfBlock",
		"nativeChecker": true
	}, {
		"checkerName": "TopLevelPropertyNaming",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyInitBlock",
		"nativeChecker": true
	}, {
		"checkerName": "NewLineAtEndOfFile",
		"nativeChecker": true
	}, {
		"checkerName": "ConstructorParameterNaming",
		"nativeChecker": true
	}, {
		"checkerName": "SafeCast",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyWhenBlock",
		"nativeChecker": true
	}, {
		"checkerName": "ComplexMethod",
		"nativeChecker": true
	}, {
		"checkerName": "UnreachableCode",
		"nativeChecker": true
	}, {
		"checkerName": "EmptySecondaryConstructor",
		"nativeChecker": true
	}, {
		"checkerName": "MatchingDeclarationName",
		"nativeChecker": true
	}, {
		"checkerName": "TooGenericExceptionCaught",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyClassBlock",
		"nativeChecker": true
	}, {
		"checkerName": "ExplicitGarbageCollectionCall",
		"nativeChecker": true
	}, {
		"checkerName": "LongMethod",
		"nativeChecker": true
	}, {
		"checkerName": "LargeClass",
		"nativeChecker": true
	}, {
		"checkerName": "VariableNaming",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyFinallyBlock",
		"nativeChecker": true
	}, {
		"checkerName": "LongMethod",
		"nativeChecker": true
	}, {
		"checkerName": "EmptyDefaultConstructor",
		"nativeChecker": true
	}],
	"lastCodeRepos": [{
		"revision": "0691940",
		"repoId": "dM3z"
	}],
    "projName": "CODECC_698F8F928C852980",
    "scanPath": "/data/landun/workspace",
    "scanType": "full",
    "skipPaths": [
        ".*/TDRExported/.*",
        ".*/.temp/.*",
        ".*/.svn/.*",
        ".*/.git/.*"
    ],
    "toolOptions": [
        {
            "optionName": "SHELL",
            "optionValue": "# \u60a8\u53ef\u4ee5\u901a\u8fc7setEnv\u51fd\u6570\u8bbe\u7f6e\u539f\u5b50\u95f4\u4f20\u9012\u7684\u53c2\u6570\n# setEnv \"FILENAME\" \"package.zip\"\n# \u7136\u540e\u5728\u540e\u7eed\u7684\u539f\u5b50\u7684\u8868\u5355\u4e2d\u4f7f\u7528${FILENAME}\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\n# \u8bf7\u4f7f\u7528\u4f9d\u8d56\u7684\u6784\u5efa\u5de5\u5177\u5982maven/cmake\u7b49\u5199\u4e00\u4e2a\u7f16\u8bd1\u811a\u672cbuild.sh\n# \u786e\u4fddbuild.sh\u80fd\u591f\u7f16\u8bd1\u4ee3\u7801\n# cd path/to/build.sh\n# sh build.sh\n",
            "osType": "LINUX"
        }
    ]
}